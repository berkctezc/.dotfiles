name: 'homelab-container'
services:

#############
# Portainer #
#############
  portainer-ce:
    container_name: portainer
    network_mode: bridge
    image: portainer/portainer-ce:alpine-sts
    command: -H tcp://agent:9443 --tlsskipverify
    environment:
      PUID: "$(id -u)"
      PGID: "$(id -g)"
    ports:
      - "8000:8000"
      - "9443:9443"
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ~/.config/portainer_data:/data

  portainer-agent:
    image: portainer/agent
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes

#########################################################

############
# Jellyfin #
############
  jellyfin:
    image: jellyfin/jellyfin:unstable
    container_name: jellyfin
    network_mode: bridge
    ports:
      - "8096:8096"
      - "8920:8920"
      - "7359:7359/udp"
      - "1900:1900/udp"
    environment:
      PUID: "$(id -u)"
      PGID: "$(id -g)"
    volumes:
      - ~/:/data
      - ~/.config/jellyfin:/config
      - ~/.cache/jellyfin:/cache
    restart: unless-stopped
    extra_hosts:
      - "host.docker.internal:host-gateway"
    devices:
      - /dev/dri/renderD128:/dev/dri/renderD128
#########################################################

################
# qBittorrent #
###############
  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    network_mode: bridge
    env_file:
      - ".env"
    environment:
      WEBUI_PORT: "8080"
      TORRENTING_PORT: "6881"
      PUID: "$(id -u)"
      PGID: "$(id -g)"
    volumes:
      - ~/.config/qbittorrent:/config
      - ~/Syncthing:/syncthing
      - ~/Downloads:/downloads
    ports:
      - "8080:8080"
      - "6881:6881"
      - "6881:6881/udp"
    restart: unless-stopped
#########################################################

##############
# Syncthing #
#############
  syncthing:
    image: syncthing/syncthing:rc
    container_name: syncthing-server
    hostname: synct-server
    network_mode: bridge
    environment:
      PUID: "$(id -u)"
      PGID: "$(id -g)"
    volumes:
      - ~/Syncthing:/var/syncthing
    ports:
      - "8384:8384"
      - "22000:22000/tcp"
      - "22000:22000/udp"
      - "21027:21027/udp"
    restart: unless-stopped
#########################################################

##############
# Watchtower #
##############
  watchtower:
    container_name: watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    image: containrrr/watchtower:latest-dev
    restart: unless-stopped
#########################################################

###################
# Kasm Workspaces #
###################
  kasm:
    image: lscr.io/linuxserver/kasm:develop
    container_name: kasm
    privileged: true
    environment:
      PUID: "$(id -u)"
      PGID: "$(id -g)"
      KASM_PORT: "443"
    volumes:
      - ~/kasm/data:/opt
      - ~/kasm/profiles:/profiles
      - /dev/input:/dev/input
      - /run/udev/data:/run/udev/data
    ports:
      - "3512:3000"
      - "489:443"
    restart: unless-stopped
#########################################################

###########
# Rancher #
###########
  rancher:
    container_name: rancher-server
    image: rancher/rancher:latest
    volumes:
      - ~/rancher:/var/lib/rancher
    restart: unless-stopped
    ports:
      - "89:80"
      - "446:443"
    privileged: true
#########################################################

###############
# Filebrowser #
###############
  filebrowser:
    image: filebrowser/filebrowser:s6
    container_name: filebrowser
    volumes:
      - /home:/srv
      - ~/.config/filebrowser/database/:/database/
      - ~/.config/filebrowser/config/:/config/
    environment:
      - PUID="$(id -u)"
      - PGID="$(id -g)"
    ports:
      - "8764:80"
    restart: unless-stopped
#########################################################

###########
# Homarr #
##########
  homarr:
    container_name: homarr
    network_mode: bridge
    image: ghcr.io/ajnart/homarr:dev
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ~/.config/homarr/configs:/app/data/configs
      - ~/.config/homarr/icons:/app/public/icons
      - ~/.config/homarr/data:/data
    ports:
      - "7575:7575"
    environment:
      PUID: "$(id -u)"
      PGID: "$(id -g)"
#########################################################

#############
# Postgres #
############
  postgres:
    container_name: postgres
    image: postgres
    network_mode: bridge
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "6432:5432"
    restart: unless-stopped
#########################################################

##########
# Redis #
#########
  redis:
    container_name: redis
    image: redis
    restart: unless-stopped
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - REDIS_PORT=6379
    ports:
      - '6379:6379'
    volumes:
      - 'redis_data:/root/redis'
#########################################################

##################
# HomeAssistant #
#################
  homeassistant:
    container_name: homeassistant
    image: homeassistant/home-assistant:dev
    volumes:
      - ~/.config/homeassistant:/config
      - /etc/localtime:/etc/localtime:ro
      - /run/dbus:/run/dbus:ro
    restart: unless-stopped
    privileged: true
    network_mode: host
    ports:
      - 8123:8123
    environment:
      PUID: "$(id -u)"
      PGID: "$(id -g)"
    devices:
      - /dev/ttyUSB0:/dev/ttyUSB0
#########################################################

###################
# Minecraft Java #
##################
  minecraft:
    image: itzg/minecraft-server
    tty: true
    stdin_open: true
    restart: unless-stopped
    ports:
      - "25565:25565"
    environment:
      EULA: "TRUE"
    volumes:
      - ~/mc-java-data:/data
#########################################################

######################
# Minecraft Bedrock #
####################
  minecraft-bedrock:
    image: itzg/minecraft-bedrock-server
    tty: true
    stdin_open: true
    restart: unless-stopped
    ports:
      - "19132:19132/udp"
    environment:
      EULA: "TRUE"
    volumes:
      - ~/mc-bedrock-data:/data
#########################################################

#############
# TubeSync #
############
  tubesync:
    image: ghcr.io/meeb/tubesync:latest
    container_name: tubesync
    restart: unless-stopped
    network_mode: bridge
    ports:
      - 4848:4848
    volumes:
      - /some/directory/tubesync-config:/config
      - /some/directory/tubesync-downloads:/downloads
    environment:
      PUID: "$(id -u)"
      PGID: "$(id -g)"

#########################################################

#############
# Pi-Hole #
############
  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    network_mode: host
    environment:
      - DNSMASQ_USER=root
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "67:67/udp"
      - "80:80/tcp"
    volumes:
      - '~/.config/pihole/etc:/etc/pihole'
      - '~/.config/pihole/dnsmasq:/etc/dnsmasq.d'
    cap_add:
      - NET_ADMIN
    restart: unless-stopped
#########################################################

volumes:
  cache:
  postgres:
  redis_data:
    driver: local
