name: 'homelab-container'
services:
#########################################################
  #############
  # Portainer #
  #############
  portainer-ce:
    container_name: portainer
    network_mode: bridge
    image: portainer/portainer-ce:alpine-sts
    command: -H tcp://agent:9443 --tlsskipverify
    environment:
      PUID: 1000
      PGID: 1000
    ports:
      - "8000:8000"
      - "9443:9443"
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ~/.config/portainer_data:/data

  agent:
    container_name: portainer_agent
    network_mode: bridge
    ports:
      - "9001:9001"
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    image: portainer/agent:alpine-sts
#########################################################
  ############
  # Jellyfin #
  ############
  jellyfin:
    image: jellyfin/jellyfin:latest
    container_name: jellyfin
    network_mode: bridge
    ports:
      - "8096:8096"
      - "8920:8920"
      - "7359:7359/udp"
      - "1900:1900/udp"
    environment:
      PUID: 1000
      PGID: 1000
    volumes:
      - ~/:/data
      - ~/.config/jellyfin:/config
      - ~/.cache/jellyfin:/cache
    restart: unless-stopped
    extra_hosts:
      - "host.docker.internal:host-gateway"
    devices:
      - /dev/dri:/dev/dri
#########################################################
  ################
  # qBittorrent #
  ###############
  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    network_mode: bridge
    env_file:
      - ".env"
    environment:
      WEBUI_PORT: "8080"
      TORRENTING_PORT: "6881"
      PUID: 1000
      PGID: 1000
    volumes:
      - ~/.config/qbittorrent:/config
      - ~/Storage/Syncthing:/syncthing
      - ~/Storage/Downloads:/downloads
    ports:
      - "8081:8080"
      - "6881:6881"
      - "6881:6881/udp"
    restart: unless-stopped
#########################################################
  ##############
  # Syncthing #
  #############
  syncthing:
    image: syncthing/syncthing:rc
    container_name: syncthing-server
    hostname: synct-server
    network_mode: bridge
    environment:
      PUID: 1000
      PGID: 1000
    volumes:
      - ~/Storage/Syncthing:/var/syncthing
    ports:
      - "8384:8384"
      - "22000:22000/tcp"
      - "22000:22000/udp"
      - "21027:21027/udp"
    restart: unless-stopped
#########################################################
  ##############
  # Watchtower #
  ##############
  watchtower:
    network_mode: bridge
    container_name: watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    image: containrrr/watchtower:latest-dev
    restart: unless-stopped
#########################################################
  ###########
  # Rancher #
  ###########
  rancher:
    container_name: rancher-server
    image: rancher/rancher:latest
    volumes:
      - ~/rancher:/var/lib/rancher
    restart: unless-stopped
    ports:
      - "89:80"
      - "446:443"
    privileged: true
#########################################################
  ###############
  # Filebrowser #
  ###############
  filebrowser:
    image: filebrowser/filebrowser:s6
    container_name: filebrowser
    volumes:
      - /home:/srv
      - ~/.config/filebrowser/database/:/database/
      - ~/.config/filebrowser/config/:/config/
    environment:
      PUID: 1000
      PGID: 1000
    ports:
      - "8764:80"
    restart: unless-stopped

#########################################################
  #############
  # Postgres #
  ############
  postgres:
    container_name: postgres
    image: postgres
    network_mode: bridge
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "6432:5432"
    restart: unless-stopped
#########################################################
  ##########
  # Redis #
  #########
  redis:
    container_name: redis
    image: redis
    restart: unless-stopped
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - REDIS_PORT=6379
    ports:
      - '6380:6379'
    volumes:
      - 'redis_data:/root/redis'
#########################################################
  ##################
  # HomeAssistant #
  #################
  homeassistant:
    container_name: homeassistant
    image: homeassistant/home-assistant:dev
    volumes:
      - ~/.config/homeassistant:/config
      - /etc/localtime:/etc/localtime:ro
      - /run/dbus:/run/dbus:ro
    restart: unless-stopped
    privileged: true
    network_mode: bridge
    ports:
      - 8124:8123
    environment:
      PUID: 1000
      PGID: 1000
    devices:
      - /dev/ttyUSB0:/dev/ttyUSB0
#########################################################
  #############
  # TubeSync #
  ############
  tubesync:
    image: ghcr.io/meeb/tubesync:latest
    container_name: tubesync
    restart: unless-stopped
    network_mode: bridge
    ports:
      - 4848:4848
    volumes:
      - ~/Storage/directory/tubesync-config:/config
      - ~/Storage/tubesync-downloads:/downloads
    environment:
      PUID: 1000
      PGID: 1000
#########################################################
  ############
  # Crafty 4 #
  ############
  crafty:
    container_name: crafty_container
    image: registry.gitlab.com/crafty-controller/crafty-4:latest
    restart: always
    environment:
        - TZ=Etc/UTC
    ports:
        - "8443:8443"
        - "8123:8123"
        - "19132:19132/udp"
        - "25500-25600:25500-25600"
    volumes:
        - ~/.config/crafty/backups:/crafty/backups
        - ~/.config/crafty/logs:/crafty/logs
        - ~/.config/crafty/servers:/crafty/servers
        - ~/.config/crafty/config:/crafty/app/config
        - ~/.config/crafty/import:/crafty/import
#########################################################
  ###############
  # Uptime Kuma #
  ###############
  uptime-kuma:
    image: louislam/uptime-kuma:1
    volumes:
      - ~/.config/uptime-kuma/data:/app/data
    ports:
      - 3001:3001
    restart: unless-stopped
#########################################################
  ###############
  # Code Server #
  ###############
  code-server:
    image: lscr.io/linuxserver/code-server:latest
    container_name: code-server
    environment:
      PUID: 1000
      PGID: 1000
      TZ: "Etc/UTC"
    volumes:
      - ~/.config/code-server:/config
    ports:
      - 8447:8443
    restart: unless-stopped
#########################################################
  ##########
  # vsftpd #
  ##########
  vsftpd:
      container_name: vsftpd
      image: fauria/vsftpd
      restart: unless-stopped
      volumes:
          - ~/Storage/ftp-sv:/home/vsftpd
      ports:
          - 20:20
          - 21:21
          - 21100-21110:21100-21110
      environment:
        PUID: 1000
        PGID: 1000
        FTP_USER: "root"
        FTP_PASS: "root"
        PASV_ADDRESS: "127.0.0.1"
        PASV_MIN_PORT: 21100
        PASV_MAX_PORT: 21110
#########################################################
  ############
  # Scrypted #
  ############
  scrypted:
    image: koush/scrypted
    environment:
        - SCRYPTED_WEBHOOK_UPDATE_AUTHORIZATION=Bearer token
        - SCRYPTED_WEBHOOK_UPDATE=http://localhost:10444/v1/update
    container_name: scrypted
    restart: unless-stopped
    network_mode: host
    devices:
        - /dev/dri:/dev/dri
    volumes:
        - ~/Storage/scrypted/volume:/server/volume
        - ~/Storage/scrypted/video:/nvr
    logging:
        driver: "json-file"
        options:
            max-size: "25m"
            max-file: "10"
    labels:
        - "com.centurylinklabs.watchtower.scope=scrypted"
#########################################################
  #####################
  # Speedtest Tracker #
  #####################
  speedtest-tracker:
    image: lscr.io/linuxserver/speedtest-tracker:latest
    container_name: speedtest-tracker
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
      - APP_KEY=
      - APP_URL=
      - DB_CONNECTION=sqlite
      - SPEEDTEST_SCHEDULE=
      - SPEEDTEST_SERVERS=
    volumes:
      - ~/.config/speedtest-tracker:/config
    ports:
      - 82:80
    restart: unless-stopped
#########################################################
  ##############
  # ZoneMinder #
  ##############
  zoneminder:
        container_name: zoneminder
        network_mode: bridge
        privileged: false
        shm_size: 5G
        ports:
            - 8444:443/tcp
            - 9000:9000/tcp
        environment:
            - TZ=Etc/UTC
            - PUID=99
            - PGID=100
            - INSTALL_HOOK=0
            - INSTALL_FACE=0
            - INSTALL_TINY_YOLOV3=0
            - INSTALL_YOLOV3=0
            - INSTALL_TINY_YOLOV4=0
            - INSTALL_YOLOV4=0
            - MULTI_PORT_START=0
            - MULTI_PORT_END=0
        volumes:
            - ~/Storage/zoneminder/config:/config
            - ~/Storage/zoneminder/cache:/var/cache/zoneminder
            - ~/Storage/zoneminder/data:/data
            - ~/Storage/zoneminder/log:/log
            - type: tmpfs
              target: /dev/shm
              tmpfs:
                size: 1000000000
        image: dlandon/zoneminder

#########################################################
volumes:
  cache:
  postgres:
  redis_data:
    driver: local
#########################################################