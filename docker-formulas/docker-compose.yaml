name: 'homelab-container'
services:

  #############
  # Portainer #
  #############
  portainer-ce:
    container_name: portainer
    network_mode: bridge
    image: portainer/portainer-ce:alpine-sts
    environment:
      PUID: "$(id -u)"
      PGID: "$(id -g)"
    ports:
      - "8000:8000"
      - "9443:9443"
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ~/.config/portainer_data:/data
  #########################################################

  ############
  # Jellyfin #
  ############
  jellyfin:
    image: jellyfin/jellyfin:unstable
    container_name: jellyfin
    network_mode: bridge
    ports:
      - "8096:8096"
      - "8920:8920"
      - "7359:7359/udp"
      - "1900:1900/udp"
    environment:
      PUID: "$(id -u)"
      PGID: "$(id -g)"
    volumes:
      - ~/:/data
      - ~/.config/jellyfin:/config
      - ~/.cache/jellyfin:/cache
    restart: unless-stopped
    extra_hosts:
      - "host.docker.internal:host-gateway"
    devices:
      - /dev/dri/renderD128:/dev/dri/renderD128
  #########################################################

  ################
  # qBittorrent #
  ###############
  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    network_mode: bridge
    env_file:
      - ".env"
    environment:
      WEBUI_PORT: "8080"
      TORRENTING_PORT: "6881"
      PUID: "$(id -u)"
      PGID: "$(id -g)"
    volumes:
      - ~/.config/qbittorrent:/config
      - ~/Syncthing:/syncthing
      - ~/Downloads:/downloads
    ports:
      - "8080:8080"
      - "6881:6881"
      - "6881:6881/udp"
    restart: unless-stopped
  #########################################################

  ##############
  # Syncthing #
  #############
  syncthing:
    image: syncthing/syncthing:rc
    container_name: syncthing-server
    hostname: synct-server
    network_mode: bridge
    environment:
      PUID: "$(id -u)"
      PGID: "$(id -g)"
    volumes:
      - ~/Syncthing:/var/syncthing
    ports:
      - "8384:8384"
      - "22000:22000/tcp"
      - "22000:22000/udp"
      - "21027:21027/udp"
    restart: unless-stopped
  #########################################################

  ##############
  # Watchtower #
  ##############
  watchtower:
    container_name: watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    image: containrrr/watchtower:latest-dev
    restart: unless-stopped
  #########################################################

  ###################
  # Kasm Workspaces #
  ###################
  kasm:
    image: lscr.io/linuxserver/kasm:develop
    container_name: kasm
    privileged: true
    environment:
      PUID: "$(id -u)"
      PGID: "$(id -g)"
      KASM_PORT: "443"
    volumes:
      - ~/kasm/data:/opt
      - ~/kasm/profiles:/profiles
      - /dev/input:/dev/input
      - /run/udev/data:/run/udev/data
    ports:
      - "3512:3000"
      - "489:443"
    restart: unless-stopped
  #########################################################

  ###########
  # Rancher #
  ###########
  rancher:
    container_name: rancher-server
    image: rancher/rancher:latest
    volumes:
      - ~/rancher:/var/lib/rancher
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    privileged: true
  #########################################################

  ###############
  # Filebrowser #
  ###############
  filebrowser:
    image: filebrowser/filebrowser:s6
    container_name: filebrowser
    volumes:
      - /home:/srv
      - ~/.config/filebrowser/database/:/database/
      - ~/.config/filebrowser/config/:/config/
    environment:
      - PUID="$(id -u)"
      - PGID="$(id -g)"
    ports:
      - "8764:80"
    restart: unless-stopped
  #########################################################

  ###########
  # Homarr #
  ##########
  homarr:
    container_name: homarr
    network_mode: bridge
    image: ghcr.io/ajnart/homarr:dev
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ~/.config/homarr/configs:/app/data/configs
      - ~/.config/homarr/icons:/app/public/icons
      - ~/.config/homarr/data:/data
    ports:
      - "7575:7575"
    environment:
      PUID: "$(id -u)"
      PGID: "$(id -g)"
  #########################################################

  #############
  # Postgres #
  ############
  postgres:
    container_name: postgres
    image: postgres
    network_mode: bridge
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "6432:5432"
    restart: unless-stopped
  #########################################################

  ##########
  # Redis #
  #########
  redis:
    container_name: redis
    image: redis
    restart: unless-stopped
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - REDIS_PORT=6379
    ports:
      - '6379:6379'
    volumes:
      - 'redis_data:/root/redis'
  #########################################################

  ##################
  # HomeAssistant #
  #################
  homeassistant:
    container_name: homeassistant
    image: homeassistant/home-assistant:dev
    volumes:
      - ~/.config/homeassistant:/config
      - /etc/localtime:/etc/localtime:ro
      - /run/dbus:/run/dbus:ro
    restart: unless-stopped
    privileged: true
    network_mode: host
    ports:
      - 8123:8123
    environment:
      PUID: "$(id -u)"
      PGID: "$(id -g)"
    devices:
      - /dev/ttyUSB0:/dev/ttyUSB0
  #########################################################

  ###################
  # Minecraft Java #
  ##################
  mc:
    image: itzg/minecraft-server
    tty: true
    stdin_open: true
    restart: unless-stopped
    ports:
      - "25565:25565"
    environment:
      EULA: "TRUE"
    volumes:
      - ~/mc-java-data:/data
  ###########

  ######################
  # Minecraft Bedrock #
  ####################
  mc-bedrock:
    image: itzg/minecraft-bedrock-server
    tty: true
    stdin_open: true
    restart: unless-stopped
    ports:
      - "19132:19132/udp"
    environment:
      EULA: "TRUE"
    volumes:
      - ~/mc-bedrock-data:/data
  #########################################################

  ###########
  # Huggin #
  ##########
  mysqldata:
    image: mysql:5.7
    command: /bin/true

  mysql:
    image: mysql:5.7
    restart: always
    #env_file:
    volumes_from:
      - mysqldata

  web:
    image: ghcr.io/huginn/huginn-single-process
    restart: always
    ports:
      - "3001:3000"
    depends_on:
      - mysql

  threaded:
    image: ghcr.io/huginn/huginn-single-process
    command: /scripts/init bin/threaded.rb
    restart: always
    depends_on:
      - mysql
      - web
  #########################################################

  #################
  # TubeArchivist #
  #################
  tubearchivist:
    container_name: tubearchivist
    restart: unless-stopped
    image: bbilly1/tubearchivist
    ports:
      - 8001:8000
    volumes:
      - media:/youtube
      - cache:/cache
    environment:
      - ES_URL=http://archivist-es:9200
      - REDIS_HOST=archivist-redis
      - HOST_UID=1000
      - HOST_GID=1000
      - TA_HOST=tubearchivist.local
      - TA_USERNAME=tubearchivist
      - TA_PASSWORD=verysecret
      - ELASTIC_PASSWORD=verysecret
      - TZ=America/New_York
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8001/health" ]
      interval: 2m
      timeout: 10s
      retries: 3
      start_period: 30s
    depends_on:
      - archivist-es
      - archivist-redis
  archivist-redis:
    image: redis/redis-stack-server
    container_name: archivist-redis
    restart: unless-stopped
    expose:
      - "6379"
    volumes:
      - redis:/data
    depends_on:
      - archivist-es
  archivist-es:
    image: bbilly1/tubearchivist-es
    container_name: archivist-es
    restart: unless-stopped
    environment:
      - "ELASTIC_PASSWORD=verysecret"
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
      - "xpack.security.enabled=true"
      - "discovery.type=single-node"
      - "path.repo=/usr/share/elasticsearch/data/snapshot"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - es:/usr/share/elasticsearch/data
    expose:
      - "9200"
  #########################################################

  ##############
  # Invidious #
  #############
  invidious:
    image: quay.io/invidious/invidious:latest
    restart: unless-stopped
    ports:
      - "127.0.0.1:3002:3000"
    environment:
      INVIDIOUS_CONFIG: |
        db:
          dbname: invidious
          host: invidious-db
          port: 5432
        check_tables: true
        signature_server: inv_sig_helper:12999
        visitor_data: CHANGE_ME
        po_token: CHANGE_ME
        # external_port:
        # domain:
        # https_only: false
        # statistics_enabled: false
        hmac_key: "CHANGE_ME!!"
    healthcheck:
      test: wget -nv --tries=1 --spider http://127.0.0.1:3002/api/v1/trending || exit 1
      interval: 30s
      timeout: 5s
      retries: 2
    logging:
      options:
        max-size: "1G"
        max-file: "4"
    depends_on:
      - invidious-db

  inv_sig_helper:
    image: quay.io/invidious/inv-sig-helper:latest
    init: true
    command: [ "--tcp", "0.0.0.0:12999" ]
    environment:
      - RUST_LOG=info
    restart: unless-stopped
    cap_drop:
      - ALL
    read_only: true
    security_opt:
      - no-new-privileges:true

  invidious-db:
    image: docker.io/library/postgres:14
    restart: unless-stopped
    volumes:
      - postgresdata:/var/lib/postgresql/data
      - ./config/sql:/config/sql
      - ./docker/init-invidious-db.sh:/docker-entrypoint-initdb.d/init-invidious-db.sh
    environment:
      POSTGRES_DB: invidious
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB" ]
  #########################################################

  #############
  # TubeSync #
  ############
  tubesync:
    image: ghcr.io/meeb/tubesync:latest
    container_name: tubesync
    restart: unless-stopped
    network_mode: bridge
    ports:
      - 4848:4848
    volumes:
      - /some/directory/tubesync-config:/config
      - /some/directory/tubesync-downloads:/downloads
    environment:
      PUID: "$(id -u)"
      PGID: "$(id -g)"

#########################################################

#############
# Pi-Hole #
############
pihole:
  container_name: pihole
  image: pihole/pihole:latest
  network_mode: "host"
  ports:
    - "53:53/tcp"
    - "53:53/udp"
    - "67:67/udp"
    - "80:80/tcp"
  volumes:
    - './etc-pihole:/etc/pihole'
    - './etc-dnsmasq.d:/etc/dnsmasq.d'
  cap_add:
    - NET_ADMIN
  restart: unless-stopped

volumes:
  media:
  cache:
  redis:
  es:
  postgresdata:
  postgres:
  redis_data:
    driver: local
