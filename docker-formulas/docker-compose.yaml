name: 'homelab-container'
services:

  #############
  # Portainer #
  #############
  portainer-ce:
    container_name: portainer
    network_mode: bridge
    image: portainer/portainer-ce:alpine-sts
    environment:
      PUID: "$(id -u)"
      PGID: "$(id -g)"
    ports:
      - "8000:8000"
      - "9443:9443"
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ~/.config/portainer_data:/data

  ############
  # Jellyfin #
  ############
  jellyfin:
    image: jellyfin/jellyfin:unstable
    container_name: jellyfin
    network_mode: bridge
    ports:
      - "8096:8096"
      - "8920:8920"
      - "7359:7359/udp"
      - "1900:1900/udp"
    environment:
      PUID: "$(id -u)"
      PGID: "$(id -g)"
    volumes:
      - ~/:/data
      - ~/.config/jellyfin:/config
      - ~/.cache/jellyfin:/cache
    restart: unless-stopped
    extra_hosts:
      - "host.docker.internal:host-gateway"
    devices:
      - /dev/dri/renderD128:/dev/dri/renderD128

  ################
  # qBittorrent #
  ###############
  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    network_mode: bridge
    environment:
      TZ: "Etc/UTC"
      WEBUI_PORT: "8080"
      TORRENTING_PORT: "6881"
      PUID: "$(id -u)"
      PGID: "$(id -g)"
    volumes:
      - ~/.config/qbittorrent:/config
      - ~/Syncthing:/syncthing
      - ~/Downloads:/downloads
    ports:
      - "8080:8080"
      - "6881:6881"
      - "6881:6881/udp"
    restart: unless-stopped

  ##############
  # Syncthing #
  #############
  syncthing:
    image: syncthing/syncthing:rc
    container_name: syncthing-server
    hostname: synct-server
    network_mode: bridge
    environment:
      PUID: "$(id -u)"
      PGID: "$(id -g)"
    volumes:
      - ~/Syncthing:/var/syncthing
    ports:
      - "8384:8384"
      - "22000:22000/tcp"
      - "22000:22000/udp"
      - "21027:21027/udp"
    restart: unless-stopped

  ##############
  # Watchtower #
  ##############
  watchtower:
    container_name: watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    image: containrrr/watchtower
    restart: unless-stopped

  ###################
  # Kasm Workspaces #
  ###################
  kasm:
    image: lscr.io/linuxserver/kasm:latest
    container_name: kasm
    privileged: true
    environment:
      PUID: "$(id -u)"
      PGID: "$(id -g)"
      KASM_PORT: "443"
    volumes:
      - ~/kasm/data:/opt
      - ~/kasm/profiles:/profiles
      - /dev/input:/dev/input
      - /run/udev/data:/run/udev/data
    ports:
      - "3512:3000"
      - "489:443"
    restart: unless-stopped
    
  ###########
  # Rancher #
  ###########
  rancher:
    container_name: rancher-server
    volumes:
      - ~/rancher:/var/lib/rancher
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    privileged: true
    image: rancher/rancher:latest


  ###############
  # Filebrowser #
  ###############
  filebrowser:
    image: filebrowser/filebrowser:s6
    container_name: filebrowser
    volumes:
      - /home:/srv
      - ~/.config/filebrowser/database/:/database/
      - ~/.config/filebrowser/config/:/config/
    environment:
      - PUID="$(id -u)"
      - PGID="$(id -g)"
    ports:
      - "8764:80"
    restart: unless-stopped

  #########
  # Dashy #
  #########
  dashy:
    image: lissy93/dashy
    container_name: Dashy
    volumes:
      - ~/.config/dashy/:/app/public/
    ports:
      - "4628:80"
    environment:
      - NODE_ENV="production"
      - PUID="$(id -u)"
      - PGID="$(id -g)"
    restart: unless-stopped
    healthcheck:
      test: ['CMD', 'node', '/app/services/healthcheck']
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s
